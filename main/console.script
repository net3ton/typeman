function init(self)
	msg.post(".", "acquire_input_focus")
	msg.post("main:/cmdpool#script", "acquare_cmdpool")

	self.cmd = ""
	self.cmdpool = {}

	update_cmd(self)
end

function final(self)
	msg.post(".", "release_input_focus")
	msg.post("main:/cmdpool#script", "cmdpool", { pool = self.cmdpool })
end

function update_cmd(self)
	self.cmd = string.lower(self.cmd)
	self.cmd = string.gsub(self.cmd, "%s+", "")
	label.set_text("#cmd", self.cmd)
end

function check_cmd(self, cmd)
	if cmd == "jump" and self.cmdpool.jump then
		msg.post("hero#script", "jump")
	elseif cmd == "turn" and self.cmdpool.turn then
		msg.post("hero#script", "turn")
	elseif cmd == "getmydoorback" and self.cmdpool.getdoor then
		msg.post("exit#script", "get_it_back")
	elseif cmd == "finishhimorher" and self.cmdpool.killboss then
		msg.post("main:/loader#script", "finish_game")
	elseif cmd == "restart" then
		self.cmdpool = {}
		msg.post("main:/loader#script", "start_game")
	elseif cmd == "run" then
		msg.post("hero#script", "run")
	else
		msg.post("#wrong_cmd", "play_sound")
	end
end

--function update(self, dt)
	--while self.cmd
--end

function on_message(self, message_id, message, sender)
	if message_id == hash("cmdpool") then
		self.cmdpool = message.pool
	elseif message_id == hash("new_command") then
		self.cmdpool[message.cmd] = true
	end
end

function on_input(self, action_id, action)
	if action_id == hash("text") then
		self.cmd = self.cmd .. action.text
		update_cmd(self)
	elseif action_id == hash("enter") and action.pressed then
		check_cmd(self, self.cmd)
		self.cmd = ""
		--self.cmd = string.sub(self.cmd, 0, -2)
		update_cmd(self)
	elseif action_id == hash("backspace") and action.pressed then
		self.cmd = string.sub(self.cmd, 0, -2)
		update_cmd(self)
	end
end
