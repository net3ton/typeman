local GRAVITY = -10
local JUMP_SPEED = 160
local RUN_SPEED = 20

function init(self)
	self.velocity = vmath.vector3()
	self.pos = go.get_position()
	self.posLast = self.pos
	self.direction = -1
	self.grounded = true
	self.groundedLast = self.grounded

	turn(self)
end

function update(self, dt)
	if not self.grounded then
		self.velocity = self.velocity + vmath.vector3(0, GRAVITY, 0)
	end

	self.velocity.x = RUN_SPEED * self.direction
	self.posLast = self.pos
	self.pos = go.get_position()

	go.set_position(go.get_position() + self.velocity * dt)

	update_animation(self)

	self.groundedLast = self.grounded
	self.grounded = false

	--msg.post("@render:", "draw_line", {start_point = go.get_position(), end_point = go.get_position() + self.velocity, color = vmath.vector4(0, 0, 1, 0)})

	msg.post("main:/camera#script", "slope", { val = go.get_position().x })
end

function jump(self)
	if self.grounded then
		self.velocity.y = JUMP_SPEED
		msg.post("#jump", "play_sound")
	end
end

function turn(self)
	if self.grounded then
		self.direction = -self.direction
		sprite.set_hflip("#sprite", self.direction > 0)
	end
end

function update_animation(self)
	--print(math.abs(self.pos.x - self.posLast.x))
	--if self.grounded and math.abs(self.pos.x - self.posLast.x) < 0.001 then
	--	msg.post("#sprite", "play_animation", { id = hash("idle") })
	--	return
	--end

	if not self.grounded == self.groundedLast then
		if self.grounded then
			msg.post("#sprite", "play_animation", { id = hash("run") })
		else
			msg.post("#sprite", "play_animation", { id = hash("jump") })
		end
	end
end

function handle_contact(self, normal, distance)
	--msg.post("@render:", "draw_line", {start_point = go.get_position(), end_point = go.get_position() + normal * 20, color = vmath.vector4(1, 1, 0, 0)})

	if distance > 0 then
		go.set_position(go.get_position() + distance * normal)
	end

	if normal.y > 0.7 then
		self.grounded = true
	end

	local toground = vmath.dot(self.velocity, normal)
	if toground < 0 then
		self.velocity = self.velocity - toground * normal
	end
end

function on_message(self, message_id, message, sender)
	if message_id == hash("contact_point_response") then
		if message.group == hash("ground") then
			handle_contact(self, message.normal, message.distance)
		--elseif message.group == hash("dunger") then
		end
	elseif message_id == hash("jump") then
		jump(self)
	elseif message_id == hash("turn") then
		turn(self)
	elseif message_id == hash("exit_level") then
		go.animate("#sprite", "tint.w", go.PLAYBACK_ONCE_FORWARD, 0, go.EASING_LINEAR, 0.5)
	end
end

--function on_reload(self)
--end
