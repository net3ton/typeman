go.property("turnon", true)

function init(self)
	--go.animate(".", "position.y",go.PLAYBACK_LOOP_PINGPONG, 2, go.EASING_INOUTQUAD, 2)
	--go.animate("#sprite", "tint.w", go.PLAYBACK_LOOP_PINGPONG, 0, go.EASING_INOUTSINE, 2)

	self.time = 0
	self.pos = go.get_position()

	self.timeLight = 2
	self.indLight = 1

	if not self.turnon then
		msg.post("#sprite", "play_animation", { id = hash("typeman_sign") })
	end
end

local ANIM = { {time = 2, on = true}, {time = 0.1, on = false}, {time = 0.2, on = true}, {time = 0.1, on = false} }
local ANIMCOUNT = 4

function update(self, dt)
	self.time = self.time + dt * 2

	local curentPos = vmath.vector3(self.pos)
	curentPos.y = self.pos.y + (math.sin(self.time) + 1) * 1.0

	go.set_position(curentPos)
	go.set_rotation(vmath.quat_rotation_z(math.sin(self.time * 1.5) / 10))

	if self.turnon then
		self.timeLight = self.timeLight - dt
		if self.timeLight <= 0 then
			update_sign(self)
		end
	end
end

function update_sign(self)
	local ind = self.indLight

	turnon_sign(ANIM[ind].on)
	self.timeLight = ANIM[ind].time

	if ind >= ANIMCOUNT then
		self.indLight = 1
	else
		self.indLight = ind + 1
	end
end

function turnon_sign(is_on)
	if is_on then
		msg.post("#sprite", "play_animation", { id = hash("typeman_sign_on") })
	else
		msg.post("#sprite", "play_animation", { id = hash("typeman_sign") })
	end
end
